- name: Deploy to EC2
  hosts: localhost
  connection: local

  tasks:
  - name: Launch EC2 Instance
    ec2_instance:
      instance_type: t2.large
      image_id: ami-0bb84b8ffd87024d8
      region: us-east-1
      key_name: test
      vpc_subnet_id: subnet-098921a6beb82b5a4
      tags:
        Name: Eshop instance
      network:
          assign_public_ip: yes
      wait: yes
      count: 1
      security_group: eshop
      aws_access_key: "{{ access_key }}"
      aws_secret_key: "{{ secret_key }}"
      security_token: "{{ session_token }}"
    register: ec2_instance_result

  - name: Add instance host to group
    add_host:
      hostname: "{{ item.public_ip_address }}"
      groupname: launched
    loop: "{{ ec2_instance_result.instances }}"

  - name: Wait for SSH connection
    delegate_to: "{{ item.public_dns_name }}"
    wait_for_connection:
      delay: 30
      timeout: 300
    loop: "{{ ec2_instance_result.instances }}"

  - name: Refresh inventory to ensure new instances exist in inventory
    meta: refresh_inventory

- name: Configure EC2 instances
  hosts: launched
  connection: ssh
  become: yes
  vars:
    ansible_ssh_private_key_file: key
    ansible_user: ec2-user  # or ec2-user, depending on your AMI

  tasks:
  - name: Install Git and Docker
    ansible.builtin.package:
      name:
        - git
        - docker
      state: latest
      update_cache: yes
  - name: Start Docker service
    service:
      name: docker
      state: started
      enabled: yes
  - name: Set proper rights to Docker services
    shell: usermod -a -G docker {{ ansible_user }}

  - name: Fetch eshop from Git
    git:
      repo: 'https://github.com/PavelVSE/DevOps.git'
      dest: ./app

  - name: Build Eshop Docker image
    docker_image:
      build:
        path: ./app
      name: eshop
      tag: latest
      source: build
  - name: Run Eshop Docker
    docker_container:
      name: eshop
      image: eshop
      state: started
      ports:
        - "80:3000"

  - name: Wait for eshop to run
    wait_for:
      port: 80
